---
openapi: 3.0.1
info:
  title: My API
  version: v1
paths:
  "/api/Action":
    get:
      tags:
      - Action
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ActionDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ActionDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ActionDTO"
    post:
      tags:
      - Action
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ActionDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/ActionDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ActionDTO"
      responses:
        '200':
          description: Success
    put:
      tags:
      - Action
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ActionDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/ActionDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ActionDTO"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Action
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  "/api/Action/single-action":
    get:
      tags:
      - Action
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ActionDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/ActionDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/ActionDTO"
  "/api/AgreedAction/single-action":
    get:
      tags:
      - AgreedAction
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/AgreedActionDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/AgreedActionDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/AgreedActionDTO"
  "/api/AgreedAction":
    post:
      tags:
      - AgreedAction
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AgreedActionDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/AgreedActionDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AgreedActionDTO"
      responses:
        '200':
          description: Success
    put:
      tags:
      - AgreedAction
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AgreedActionDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/AgreedActionDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AgreedActionDTO"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - AgreedAction
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  "/api/Auth/login":
    post:
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/LoginDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LoginDTO"
      responses:
        '200':
          description: Success
  "/api/Clients/change-profile-picture":
    post:
      tags:
      - Clients
      parameters:
      - name: clientId
        in: query
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PictureDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/PictureDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PictureDTO"
      responses:
        '200':
          description: Success
  "/api/Clients":
    get:
      tags:
      - Clients
      parameters:
      - name: employeeId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientDTO"
    delete:
      tags:
      - Clients
      parameters:
      - name: clientId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
  "/api/Clients/all-client-basics":
    get:
      tags:
      - Clients
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientBasicsDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientBasicsDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientBasicsDTO"
  "/api/Clients/single-client":
    get:
      tags:
      - Clients
      parameters:
      - name: clientId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
    put:
      tags:
      - Clients
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ClientDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/ClientDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ClientDTO"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
    post:
      tags:
      - Clients
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ClientDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/ClientDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ClientDTO"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientDTO"
  "/api/Clients/today-scheduled-clients":
    get:
      tags:
      - Clients
      parameters:
      - name: employeeId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientWithNextActionDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientWithNextActionDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientWithNextActionDTO"
  "/api/Clients/all-clients-next-actions":
    get:
      tags:
      - Clients
      parameters:
      - name: employeeId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientWithNextActionDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientWithNextActionDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientWithNextActionDTO"
  "/api/Employee":
    get:
      tags:
      - Employee
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmployeeBasicDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmployeeBasicDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmployeeBasicDTO"
    post:
      tags:
      - Employee
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmployeeDetailDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/EmployeeDetailDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/EmployeeDetailDTO"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
    put:
      tags:
      - Employee
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmployeeDetailDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/EmployeeDetailDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/EmployeeDetailDTO"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
  "/api/Employee/all-caregivers":
    get:
      tags:
      - Employee
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmployeeBasicDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmployeeBasicDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmployeeBasicDTO"
  "/api/Employee/change-password":
    put:
      tags:
      - Employee
      parameters:
      - name: newPassword
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
  "/api/Employee/get-employee-detail":
    get:
      tags:
      - Employee
      parameters:
      - name: employeeId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/EmployeeDetailDTO"
  "/api/Employee/change-profile-picture":
    post:
      tags:
      - Employee
      parameters:
      - name: employeeId
        in: query
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PictureDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/PictureDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PictureDTO"
      responses:
        '200':
          description: Success
  "/api/IndividualPlans":
    get:
      tags:
      - IndividualPlans
      parameters:
      - name: clientId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/IndividualPlanDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/IndividualPlanDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/IndividualPlanDTO"
    delete:
      tags:
      - IndividualPlans
      parameters:
      - name: id
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
    post:
      tags:
      - IndividualPlans
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/IndividualPlanCreateUpdateDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/IndividualPlanCreateUpdateDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/IndividualPlanCreateUpdateDTO"
      responses:
        '200':
          description: Success
    put:
      tags:
      - IndividualPlans
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/IndividualPlanCreateUpdateDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/IndividualPlanCreateUpdateDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/IndividualPlanCreateUpdateDTO"
      responses:
        '200':
          description: Success
  "/api/IndividualPlans/single-plan":
    get:
      tags:
      - IndividualPlans
      parameters:
      - name: planId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/IndividualPlanDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/IndividualPlanDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/IndividualPlanDTO"
  "/api/RegisteredActions/generate-next-month-actions":
    post:
      tags:
      - RegisteredActions
      responses:
        '200':
          description: Success
  "/api/RegisteredActions/registered-action":
    put:
      tags:
      - RegisteredActions
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisteredActionDTO"
          text/json:
            schema:
              "$ref": "#/components/schemas/RegisteredActionDTO"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RegisteredActionDTO"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RegisteredActionDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/RegisteredActionDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/RegisteredActionDTO"
  "/api/RegisteredActions/last-registered-actions-min-max-date":
    get:
      tags:
      - RegisteredActions
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MinMaxDateDTO"
            application/json:
              schema:
                "$ref": "#/components/schemas/MinMaxDateDTO"
            text/json:
              schema:
                "$ref": "#/components/schemas/MinMaxDateDTO"
  "/api/RegisteredActions/registered-actions":
    get:
      tags:
      - RegisteredActions
      parameters:
      - name: count
        in: query
        schema:
          type: integer
          format: int32
      - name: date
        in: query
        schema:
          type: string
          format: date-time
      - name: lastActionDisplayedId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RegisteredActionsForDayDTO"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RegisteredActionsForDayDTO"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RegisteredActionsForDayDTO"
components:
  schemas:
    ActionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        generalDescription:
          type: string
          nullable: true
      additionalProperties: false
    DayOfWeek:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      format: int32
    AgreedActionDTO:
      type: object
      properties:
        employeeId:
          type: string
          format: uuid
        individualPlanId:
          type: string
          format: uuid
        day:
          "$ref": "#/components/schemas/DayOfWeek"
        id:
          type: string
          format: uuid
          nullable: true
        clientActionSpecificDescription:
          type: string
          nullable: true
        estimatedDurationMinutes:
          type: integer
          format: int32
          nullable: true
        plannedStartTime:
          type: string
          format: date-time
        plannedEndTime:
          type: string
          format: date-time
        action:
          "$ref": "#/components/schemas/ActionDTO"
      additionalProperties: false
    LoginDTO:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        isManagementSite:
          type: boolean
      additionalProperties: false
    PictureDTO:
      type: object
      properties:
        pictureUri:
          type: string
          nullable: true
      additionalProperties: false
    Gender:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    CoordinatesDTO:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      additionalProperties: false
    AddressDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        postCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        buildingNumber:
          type: string
          nullable: true
        coordinates:
          "$ref": "#/components/schemas/CoordinatesDTO"
      additionalProperties: false
    ClientDTO:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
        gender:
          "$ref": "#/components/schemas/Gender"
        address:
          "$ref": "#/components/schemas/AddressDTO"
        id:
          type: string
          format: uuid
          nullable: true
        fullName:
          type: string
          nullable: true
        profilePicture:
          "$ref": "#/components/schemas/PictureDTO"
      additionalProperties: false
    ClientBasicsDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        fullName:
          type: string
          nullable: true
        profilePicture:
          "$ref": "#/components/schemas/PictureDTO"
      additionalProperties: false
    RegisteredActionBasicDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        time:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
      additionalProperties: false
    ClientWithNextActionDTO:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        nextAction:
          "$ref": "#/components/schemas/RegisteredActionBasicDTO"
      additionalProperties: false
    EmployeeBasicDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        fullName:
          type: string
          nullable: true
        profilePictureUri:
          type: string
          nullable: true
      additionalProperties: false
    EmployeePosition:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    EmployeeDetailDTO:
      type: object
      properties:
        birthdate:
          type: string
          format: date-time
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        gender:
          "$ref": "#/components/schemas/Gender"
        employeePosition:
          "$ref": "#/components/schemas/EmployeePosition"
        id:
          type: string
          format: uuid
          nullable: true
        fullName:
          type: string
          nullable: true
        profilePictureUri:
          type: string
          nullable: true
      additionalProperties: false
    AgreedActionBasicDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        clientActionSpecificDescription:
          type: string
          nullable: true
        estimatedDurationMinutes:
          type: integer
          format: int32
          nullable: true
        plannedStartTime:
          type: string
          format: date-time
        plannedEndTime:
          type: string
          format: date-time
        action:
          "$ref": "#/components/schemas/ActionDTO"
      additionalProperties: false
    AgreedActionsForDayDTO:
      type: object
      properties:
        day:
          "$ref": "#/components/schemas/DayOfWeek"
        agreedActions:
          type: array
          items:
            "$ref": "#/components/schemas/AgreedActionBasicDTO"
          nullable: true
      additionalProperties: false
    IndividualPlanDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        validFrom:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
        actionsForDay:
          type: array
          items:
            "$ref": "#/components/schemas/AgreedActionsForDayDTO"
          nullable: true
      additionalProperties: false
    IndividualPlanCreateUpdateDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        validFrom:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
        clientId:
          type: string
          format: uuid
      additionalProperties: false
    RegisteredActionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        actionStartedDateTime:
          type: string
          format: date-time
          nullable: true
        actionFinishedDateTime:
          type: string
          format: date-time
          nullable: true
        plannedStartDateTime:
          type: string
          format: date-time
        day:
          "$ref": "#/components/schemas/DayOfWeek"
        estimatedDurationMinutes:
          type: integer
          format: int32
        action:
          "$ref": "#/components/schemas/ActionDTO"
        clientActionSpecificDescription:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        isCompleted:
          type: boolean
        isCanceled:
          type: boolean
        photo:
          "$ref": "#/components/schemas/PictureDTO"
      additionalProperties: false
    MinMaxDateDTO:
      type: object
      properties:
        minDate:
          type: string
          format: date-time
        maxDate:
          type: string
          format: date-time
      additionalProperties: false
    RegisteredActionsClientDTO:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        registeredActions:
          type: array
          items:
            "$ref": "#/components/schemas/RegisteredActionDTO"
          nullable: true
      additionalProperties: false
    RegisteredActionsForDayDTO:
      type: object
      properties:
        date:
          type: string
          format: date-time
        day:
          "$ref": "#/components/schemas/DayOfWeek"
        registeredActionsClient:
          type: array
          items:
            "$ref": "#/components/schemas/RegisteredActionsClientDTO"
          nullable: true
        containsLast:
          type: boolean
      additionalProperties: false
